{"ast":null,"code":"var _jsxFileName = \"/home/njoroge/react-bookstore/src/containers/BooksList.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { CHANGE_FILTER } from '../actions/index';\nimport getBooks from '../actions/getBooks';\nimport removeBook from '../actions/removeBook';\nimport '../styles/book-list.css';\nimport Navbar from '../components/Navbar';\n\nconst BooksList = ({\n  books,\n  filter,\n  removeBook,\n  changeFilter,\n  getBooks,\n  auth\n}) => {\n  useEffect(() => {\n    getBooks();\n  }, [getBooks]);\n\n  const handleRemoveBook = book => removeBook(book.id);\n\n  const handleFilterChange = filter => changeFilter(filter);\n\n  const filtered = filter === 'All' ? books : books.filter(book => book.category === filter);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    isAuth: auth.isAuthenticated,\n    changeFilter: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, filtered.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"No books found. Please add one below.\") : filtered.map(book => /*#__PURE__*/React.createElement(Book, {\n    book: book,\n    key: book.id.toString(),\n    removeBook: handleRemoveBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  books: {\n    books\n  },\n  filter,\n  auth\n}) => ({\n  books,\n  filter,\n  auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: book => dispatch(removeBook(book)),\n  changeFilter: filter => dispatch(CHANGE_FILTER(filter)),\n  getBooks: () => dispatch(getBooks())\n});\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n  })).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/njoroge/react-bookstore/src/containers/BooksList.js"],"names":["React","useEffect","PropTypes","connect","Book","CHANGE_FILTER","getBooks","removeBook","Navbar","BooksList","books","filter","changeFilter","auth","handleRemoveBook","book","id","handleFilterChange","filtered","category","isAuthenticated","length","map","toString","mapStateToProps","mapDispatchToProps","dispatch","propTypes","arrayOf","shape","title","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { CHANGE_FILTER } from '../actions/index';\nimport getBooks from '../actions/getBooks';\nimport removeBook from '../actions/removeBook';\nimport '../styles/book-list.css';\nimport Navbar from '../components/Navbar';\n\nconst BooksList = ({\n  books,\n  filter,\n  removeBook,\n  changeFilter,\n  getBooks,\n  auth,\n}) => {\n  useEffect(() => { getBooks(); }, [getBooks]);\n\n  const handleRemoveBook = book => removeBook(book.id);\n\n  const handleFilterChange = filter => changeFilter(filter);\n\n  const filtered = filter === 'All' ? books : books.filter(book => book.category === filter);\n\n  return (\n    <div>\n      <Navbar isAuth={auth.isAuthenticated} changeFilter={handleFilterChange} />\n      <div className=\"book-list\">\n        {\n          filtered.length === 0 ? (\n            <div className=\"no-books\">No books found. Please add one below.</div>\n          ) : (\n            filtered.map(book => (\n              <Book\n                book={book}\n                key={book.id.toString()}\n                removeBook={handleRemoveBook}\n              />\n            ))\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ books: { books }, filter, auth }) => ({\n  books,\n  filter,\n  auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: book => dispatch(removeBook(book)),\n  changeFilter: filter => dispatch(CHANGE_FILTER(filter)),\n  getBooks: () => dispatch(getBooks()),\n});\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}