{"ast":null,"code":"var _jsxFileName = \"/home/njoroge/react-bookstore/src/containers/BooksForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport createBook from '../actions/createBook';\nimport getId from '../helpers/getId';\nimport categories from '../helpers/categories';\nimport '../styles/books-form.css';\nconst categoryList = categories();\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Action'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      title,\n      category\n    } = this.state;\n    const id = getId();\n    const book = {\n      title,\n      category,\n      id\n    };\n    const {\n      createBook\n    } = this.props;\n    createBook(book);\n    this.setState({\n      title: '',\n      category: 'Action'\n    });\n  }\n\n  render() {\n    const {\n      title,\n      category\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Add new book\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"title-input\",\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Book title\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"category-select\",\n      name: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Category\"), categoryList.map(mappedCategory => /*#__PURE__*/React.createElement(\"option\", {\n      value: mappedCategory,\n      key: mappedCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, mappedCategory))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"add-book-btn\",\n      type: \"submit\",\n      value: \"Add Book\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: book => dispatch(createBook(book))\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(BooksForm);","map":{"version":3,"sources":["/home/njoroge/react-bookstore/src/containers/BooksForm.js"],"names":["React","connect","PropTypes","createBook","getId","categories","categoryList","BooksForm","Component","constructor","props","state","title","category","handleChange","bind","handleSubmit","event","name","value","target","setState","e","preventDefault","id","book","render","map","mappedCategory","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAO,0BAAP;AAEA,MAAMC,YAAY,GAAGD,UAAU,EAA/B;;AAEA,MAAME,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACA,SAAKC,QAAL,CAAc;AACZ,OAACH,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDH,EAAAA,YAAY,CAACM,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,UAAMa,EAAE,GAAGpB,KAAK,EAAhB;AACA,UAAMqB,IAAI,GAAG;AAAEb,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBW,MAAAA;AAAnB,KAAb;AACA,UAAM;AAAErB,MAAAA;AAAF,QAAiB,KAAKO,KAA5B;AACAP,IAAAA,UAAU,CAACsB,IAAD,CAAV;AACA,SAAKJ,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAAd;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,WAAW,EAAC,YAJd;AAKE,MAAA,KAAK,EAAEJ,KALT;AAME,MAAA,QAAQ,EAAE,KAAKE,YANjB;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAED,QAHT;AAIE,MAAA,QAAQ,EAAE,KAAKC,YAJjB;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EASIR,YAAY,CAACqB,GAAb,CAAiBC,cAAc,iBAC7B;AACE,MAAA,KAAK,EAAEA,cADT;AAEE,MAAA,GAAG,EAAEA,cAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,cAJH,CADF,CATJ,CAVF,eA8BE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,KAAK,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,CAFF,CADF;AAqCD;;AApEqC;;AAuExC,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtC3B,EAAAA,UAAU,EAAEsB,IAAI,IAAIK,QAAQ,CAAC3B,UAAU,CAACsB,IAAD,CAAX;AADU,CAAL,CAAnC;;AAIAlB,SAAS,CAACwB,SAAV,GAAsB;AACpB5B,EAAAA,UAAU,EAAED,SAAS,CAAC8B,IAAV,CAAeC;AADP,CAAtB;AAIA,eAAehC,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCtB,SAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport createBook from '../actions/createBook';\nimport getId from '../helpers/getId';\nimport categories from '../helpers/categories';\nimport '../styles/books-form.css';\n\nconst categoryList = categories();\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Action',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { title, category } = this.state;\n    const id = getId();\n    const book = { title, category, id };\n    const { createBook } = this.props;\n    createBook(book);\n    this.setState({ title: '', category: 'Action' });\n  }\n\n  render() {\n    const { title, category } = this.state;\n    return (\n      <div className=\"form-wrap\">\n        <h2 className=\"form-label\">Add new book</h2>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"title-input\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Book title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className=\"category-select\"\n            name=\"category\"\n            value={category}\n            onChange={this.handleChange}\n            required\n          >\n            <option disabled value=\"\">Category</option>\n            {\n              categoryList.map(mappedCategory => (\n                <option\n                  value={mappedCategory}\n                  key={mappedCategory}\n                >\n                  {mappedCategory}\n                </option>\n              ))\n            }\n          </select>\n\n          <input className=\"add-book-btn\" type=\"submit\" value=\"Add Book\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: book => dispatch(createBook(book)),\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n"]},"metadata":{},"sourceType":"module"}